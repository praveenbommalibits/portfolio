{"version":3,"sources":["components/SideNav/SideNav.js","components/About/About.js","components/SkillCard/SkillCard.js","components/Skills/Skills.js","components/ProjectCard/ProjectCard.js","components/Projects/Projects.js","components/SectionContainer/SectionContainer.js","components/Portfolio/Portfolio.js","constants/About.js","constants/Skills.js","constants/Projects.js","components/App.js","serviceWorker.js","index.js"],"names":["SideNav","handleSectionClick","className","src","alt","onClick","About","bio","SkillCard","skill","Skills","skills","industryKnowledge","map","techSkills","interpersonalSkills","ProjectCard","project","name","description","href","link","Projects","projects","projectList","SectionContainer","selectedHeading","selectedQuote","selectedSection","about","Portfolio","heading","quote","App","section","setState","state","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fe51dd8b.chunk.js","sourcesContent":["import React from 'react';\n\nimport './sidenav.css';\n\nexport const SideNav = ({ handleSectionClick }) => {\n    return (\n        <div className=\"sidenav\">\n            <img\n                src=\"https://github.com/praveenbommalibits/project-media/blob/master/profile/praveenb.png\"\n                className=\"avatar\"\n                alt=\"avatar\"\n            />\n            <h2 className=\"main-name\">Praveen Bommali</h2>\n            <p className=\"subtitle\">\"Senior Software Engineer\"</p>\n            <div className=\"sections-list\">\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"about\")}>Introduction</p>\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"skills\")}>SkillSet</p>\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"projects\")}>Projects</p>\n            </div>\n        </div>\n        \n    );\n};","import React from 'react';\n\nimport './about.css';\n\nexport const About = ({ bio }) => {\n    return (\n        <div className=\"about-container\">\n            <p>{bio}</p>\n        </div>\n    )\n}","import React from 'react';\n\nimport './skill-card.css';\n\nexport const SkillCard = ({ skill }) => {\n    return (\n        <div className=\"skill-card\">\n            {skill}\n        </div>\n    )\n}","import React from 'react';\n\nimport { SkillCard } from './../SkillCard/SkillCard';\n\nimport './skills.css';\n\nexport const Skills = ({ skills }) => {\n    return (\n        <div className=\"skills-container\">\n            <h3>Industry Knowledge</h3>\n            <div className=\"industry-skill-container\">\n                {\n                    skills.industryKnowledge.map(skill => <SkillCard skill={skill} />)\n                }\n            </div>\n            <h3>Tech Skills</h3>\n            <div className=\"industry-skill-container\">\n                {\n                    skills.techSkills.map(skill => <SkillCard skill={skill} />)\n                }\n            </div>\n            <h3>Interpersonal Skills</h3>\n            <div className=\"industry-skill-container\">\n                {\n                    skills.interpersonalSkills.map(skill => <SkillCard skill={skill} />)\n                }\n            </div>\n            \n        </div>\n    )\n}","import React from 'react'\n\nimport './project-card.css';\n\nexport const ProjectCard = ({ project }) => {\n    return (\n        <div className=\"project-card\">\n            <p><b>Name:</b> {project.name}</p>\n            <p><b>Description:</b> {project.description}</p>\n            <p><b>Link:</b> <a href={project.link}>{project.link}</a> </p>\n        </div>\n    )\n}","import React from 'react';\n\nimport { ProjectCard } from './../ProjectCard/ProjectCard';\n\nimport './projects.css';\n\nexport const Projects = ({ projects }) => {\n    return (\n        <div className=\"projects-container\">\n            <div className=\"industry-skill-container\">\n                {\n                    projects.projectList.map(project => <ProjectCard project={project} />)\n                }\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport { About } from './../About/About';\nimport { Skills } from './../Skills/Skills';\nimport { Projects } from './../Projects/Projects';\n\nimport './section-container.css';\n\nexport const SectionContainer = ({ \n    selectedHeading, \n    selectedQuote,\n    selectedSection,\n    about,\n    skills,\n    projects }) => {\n    return (\n        <div className=\"section-container\">\n            <div className=\"section-heading-container\">\n                <h1 className=\"main-heading\">{selectedHeading}</h1>\n                <p className=\"main-quote\">{selectedQuote}</p>\n            </div>\n            <div className=\"section-component\">\n                {\n                    {\n                        about: <About bio={about.bio} />,\n                        skills: <Skills skills={skills} />,\n                        projects: <Projects projects={projects} />\n                    }[selectedSection]\n                }\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport { SideNav } from './../SideNav/SideNav';\nimport { SectionContainer } from './../SectionContainer/SectionContainer';\n\nimport './portfolio.css';\n\nexport const Portfolio = ({ \n    handleSectionClick,\n    selectedHeading, \n    selectedQuote,\n    selectedSection,\n    about,\n    skills,\n    projects }) => {\n    return (\n        <div className=\"portfolio-container\">\n            <div className=\"sidenav-container\">\n                <SideNav\n                    handleSectionClick={handleSectionClick}\n                />\n            </div>\n            <div className=\"main-section-container\">\n                <SectionContainer\n                    selectedSection={selectedSection}\n\t\t\t\t\tselectedHeading={selectedHeading}\n\t\t\t\t\tselectedQuote={selectedQuote}\n\t\t\t\t\tabout={about}\n\t\t\t\t\tskills={skills}\n\t\t\t\t\tprojects={projects} />\n            </div>\n        </div>\n    );\n};","export const about = {\n    heading: \"About Me\",\n    \"quote\": \"I'm running with the time to stabilize the things smooth\",\n    \"bio\": \" I'm Praveen Kumar Bommali. Professionally  \"\n};","export const skills = {\n    heading: \"Skills\",\n    quote: \"Build your skills, not your resume\",\n    techSkills: [\n        \"JavaScript\",\n        \"NodeJS\",\n        \"ReactJS\",\n        \"React Native\",\n        \"C\",\n        \"Java\",\n        \"Python\",\n        \"HTML\",\n        \"CSS\",\n        \"Git\",\n        \"GitHub\",\n    ],\n    industryKnowledge: [\n        \"Content Management Domain\",\n        \"Machine Learnig and Statistics\",\n        \"Backend & Web Developer\",\n        \"Blogging\",\n        \"Architecture Design\",\n        \"DevOps\",\n        \"App Development\",\n        \"NLP\"  \n       \n    ],\n    interpersonalSkills: [\n        \"Communication\",\n        \"Teaching\",\n        \"Time Management\",\n      \n    ]\n};","export const projects = {\n    heading: \"Tech Repos\",\n    quote: \"My HelloWorld Projects\",\n    projectList: [\n        {\n            name: \"ConverterUtils\",\n            description: \"Converter Utis used for maintain the conversion formats\",\n            link: \"NA\"\n        }, {\n            name: \"API Benchmarking\",\n            description: \"API Benchmarking \",\n            link: \"NA\"\n        }, {\n            name: \"Mediawiki\",\n            description: \"Mediawiki tool for content management\",\n            link: \"NA\"\n        },\n        {\n            name: \"mock api services  \",\n            description: \"mock server\",\n            link: \"NA\"\n        },\n        {\n            name: \"car price predictions app\",\n            description: \"Car Price Prediction project focus on prediction of car price and deploy the model in heroku server\",\n            link: \"https://github.com/praveenbommalibits/car-price-prediction\"\n        },\n        {\n            name: \"salary prediction app\",\n            description: \"Salary Prediction project focus on prediction of salary and deploy the model in heroku server\",\n            link: \"https://github.com/praveenbommalibits/salary-prediction-app\"\n        }\n    ]\n}","import React, { Component } from 'react';\n\nimport { Portfolio } from './Portfolio/Portfolio';\n\nimport { about } from './../constants/About';\nimport { skills } from './../constants/Skills';\nimport { projects } from './../constants/Projects';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor () {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tselectedSection: \"\",\n\t\t\tselectedHeading: \"\",\n\t\t\tselectedQuote: \"\",\n\t\t\tabout: null,\n\t\t\tskills: null,\n\t\t\tprojects: null,\n\t\t};\n\t}\n\n\tcomponentWillMount () {\n\t\tthis.setState ({ \n\t\t\tabout,\n\t\t\tskills,\n\t\t\tprojects,\n\t\t\tselectedHeading: about.heading,\n\t\t\tselectedQuote: about.quote,\n\t\t\tselectedSection: \"about\" \n\t\t});\n\t}\n\n\thandleSectionClick =  (section) => {\n\t\tthis.setState({\n\t\t\tselectedSection: section,\n\t\t\tselectedHeading: this.state[section].heading,\n\t\t\tselectedQuote: this.state[section].quote\n\t\t})\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Portfolio\n\t\t\t\t\thandleSectionClick={this.handleSectionClick}\n\t\t\t\t\tselectedSection={this.state.selectedSection}\n\t\t\t\t\tselectedHeading={this.state.selectedHeading}\n\t\t\t\t\tselectedQuote={this.state.selectedQuote}\n\t\t\t\t\tabout={this.state.about}\n\t\t\t\t\tskills={this.state.skills}\n\t\t\t\t\tprojects={this.state.projects}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}